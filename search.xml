<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo+Github搭建</title>
      <link href="/post/d4de41bd.html"/>
      <url>/post/d4de41bd.html</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo安装"><a href="#Hexo安装" class="headerlink" title="Hexo安装"></a>Hexo安装</h1><h2 id="安装node-js"><a href="#安装node-js" class="headerlink" title="安装node.js"></a>安装node.js</h2><p>使用如下指令安装node.js(针对mac)：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install node</span><br></pre></td></tr></table></figure><p>安装后使用如下命令检查是否安装成功：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">node -v</span><br><span class="line"><span class="comment"># v18.12.1</span></span><br><span class="line"><span class="comment"># 检查npm是否安装成功,npm是node.js的包管理工具</span></span><br><span class="line">npm -v</span><br><span class="line"><span class="comment"># 9.2.0</span></span><br></pre></td></tr></table></figure><h2 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h2><p>配置客户端SSH key到Github，如果已经配置过可以选择忽略：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;username&quot;</span> <span class="comment"># 用户名</span></span><br><span class="line">git config --global user.email <span class="string">&quot;email@gmail.com&quot;</span> <span class="comment"># github登录邮箱</span></span><br></pre></td></tr></table></figure><p>通过终端命令生成SSH key：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;email@gmail.com&quot;</span></span><br></pre></td></tr></table></figure><p>如果已经配置过，会显示是否overwrite,选择n即可；否则会要求输入密码，然后一路回车即可，执行完成后会在~&#x2F;.ssh&#x2F;id_rsa.pub目录下生成需要使用的key（这里的文件可能会有一些变化，不过会有提示的，按照提示操作即可）。使用命令行查看 SSH key的内容：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><p>然后在Github Settings里面配置一下SSH key即可<br>测试是否与Github连接成功：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p><img src="/../img/github_connection.jpg">   </p><p>出现上图结果，即表示连接成功，上面红色框出的部分是username.</p><h2 id="本地博客关联到Github主页"><a href="#本地博客关联到Github主页" class="headerlink" title="本地博客关联到Github主页"></a>本地博客关联到Github主页</h2><p>登录Github并创建名为username.github.io的仓库，注意名字一定要正确！在Github上创建的时候如果之前创建过，会有提示红色，后面的访问权限选public；需要在本地下载hexo的git管理工具，切换回Blog目录，并输入以下指令：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo cnpm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>然后修改Blog&#x2F;_config.yml的deploy部分：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: git@github.com:username/username.github.io.git</span><br><span class="line">  branch: master <span class="comment"># github现在default branch是main，这里这样写的话会提交到branch master，github.io显示的是main分支生的，所以后续还要合并</span></span><br></pre></td></tr></table></figure><h2 id="使用cnpm安装hexo"><a href="#使用cnpm安装hexo" class="headerlink" title="使用cnpm安装hexo"></a>使用cnpm安装hexo</h2><p>cnpm版本查看，以及一些工具的安装路径显示：<br><img src="/../img/cnpm_location.jpg"><br>cnpm是中国版的npm，是淘宝定制的 cnpm (gzip 压缩支持) 命令行工具代替默认的npm，国内用比较好</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo cnpm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>安装不了也可以选择源代码安装，参考：<a href="https://danteng.org/how-to-install-hexo-manually/">hexo手动安装</a> </p><p>安装完成后在自选路径创建Blog(customized)文件夹，在该文件夹下初始博客：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>出现以下情况，虽然显示依赖安装失败，但其实并不影响博客初始化：<br><img src="/../img/dependencies.jpg"><br>根据它的建议是使用npm install处理此问题,如果直接使用npm可能会出现权限问题，可以使用如下指令修改用户权限：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">chown</span> -R [owner]:[owner]  /usr/local/lib/node_modules</span><br><span class="line">sudo <span class="built_in">chown</span> -R ownerName: /usr/local/lib/node_modules</span><br><span class="line">sudo <span class="built_in">chown</span> -R <span class="variable">$USER</span> /usr/local/lib/node_modules</span><br></pre></td></tr></table></figure><p>也可以直接使用sudo，但是不推荐：<br><img src="/../img/sudo.jpg"><br>依赖安装失败可参考博客：<a href="https://blog.51cto.com/u_15127596/4372091https://blog.csdn.net/weixin_44237337/article/details/119994618">关于hexo init过程中出现fail to install dependencies的解决</a></p><blockquote><p>cnpm可以解决npm的所有问题，所以还是用cnpm替吧  </p></blockquote><p>使用hexo init初始化成功之后，在blog目录下执行预览操作：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 需要hexo server的支持</span></span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>会看到如下输出内容：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">INFO  Validating config</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop. </span><br></pre></td></tr></table></figure><p>点击上面的连接，就可以在本地访问，hexo生成的默认静态网站。命令行执行如下指令，生成博客文件并将其推送至github：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 生成想要的博客文件</span></span><br><span class="line">hexo g</span><br><span class="line"><span class="comment"># 将本地博客文件push到github</span></span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>执行成功后，在浏览器中输入[https:&#x2F;&#x2F;]username.github.io即可对自己的Blog进行访问。如果这里本地静态博客和Github Pages不同步，可以考虑以下几点：</p><ol><li>首先确认Blog&#x2F;_config.yml配置文件中的deploy配置的是否正确</li><li>现在的Github主分支命名为main,老版本是master，看一下是否是default版本的问题</li><li>提交仓库的根地址是否正确</li></ol><h1 id="Butterfly美化"><a href="#Butterfly美化" class="headerlink" title="Butterfly美化"></a>Butterfly美化</h1><p>Butterfly主题添加到themes文件下，这个步骤网上搜就好<br>Butterfly美化主要参考：<br>【1】<a href="https://blo[g.csdn.net/qq_43740362/article/details/113783074">Butterfly美化</a><br>【2】<a href="https://chenwenjia1991.github.io/2018/11/01/GitHub-Pages-Hexo-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/">Hexo Butterfly配置</a><br>【3】<a href="https://hexo.io/zh-cn/docs/writing.html?spm=a2c6h.12873639.article-detail.12.3a9b8c56TI5iuH">hexo中文文档</a><br>【4】<a href="https://cloud.tencent.com/developer/article/1577027">超级详细的Hexo DIY方法</a></p><p>一些小问题，对subtitle修改后可能出现标题和副标题向左对齐，在source&#x2F;css&#x2F;_layout&#x2F;head.sty里面修改title和sub-title下面加上text-align: center即可；背景图片设置：都是在butterfly下面的_config.yml里面进行设置<br>其他page页的顶部图可以在各自的md页面设置。</p><h1 id="写博客"><a href="#写博客" class="headerlink" title="写博客"></a>写博客</h1><p>安装一个编写md文件的工具，个人使用vscode；  </p><p>cd到博客目录下执行hexo new  “postName” 创建文章<br>博客目录下的source&#x2F;_posts找到创建的文章，打开直接编写即可，就是正常编写markdown文件，markdown编辑参考：<a href="https://www.runoob.com/markdown/">菜鸟教程</a></p><h1 id="发布博客"><a href="#发布博客" class="headerlink" title="发布博客"></a>发布博客</h1><ol><li>本地写好博客</li><li>打开终端，cd到博客目录，执行hexo clean清空缓存</li><li>执行hexo g构建文章页面</li><li>执行hexo s本地预览整个站点</li><li>执行hexo d发布Pages更新线上博客</li></ol><h1 id="存在的问题"><a href="#存在的问题" class="headerlink" title="存在的问题"></a>存在的问题</h1><ol><li>移动端优化还没做</li><li>搜索引擎优化没做，搜索功能存在缺陷</li><li>访问速度优化</li></ol><h2 id="博客搭建思考"><a href="#博客搭建思考" class="headerlink" title="博客搭建思考"></a>博客搭建思考</h2><p>使用Github Pages的好处：<br> 1.免费，Github提供无限流量<br> 2. 都是静态文件，世界各地都有理想的访问速度（访问速度可进一步优化）<br> 3. 拥有绝对的管理权，又享受Git的版本管理功能，不用担心文章遗失</p><p>他人的思考：<a href="https://chenwenjia1991.github.io/2018/11/01/GitHub-Pages-Hexo-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/">博客搭建思考</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 环境配置和搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>firstPage.md</title>
      <link href="/post/5042.html"/>
      <url>/post/5042.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 1111 文章分类1 </category>
          
          <category> 2222 文章分类2 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/post/16107.html"/>
      <url>/post/16107.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
